const { drive, getStreamFromURL, getExtFromUrl, getTime } = global.utils;

module.exports = {
	config: {
		name: "setwelcome",
		aliases: ["setwc"],
		version: "1.7",
		author: "NTKhang",
		countDown: 5,
		role: 1,
		description: {
			vi: "Ch·ªânh s·ª≠a n·ªôi dung tin nh·∫Øn ch√†o m·ª´ng th√†nh vi√™n m·ªõi tham gia v√†o nh√≥m chat c·ªßa b·∫°n",
			en: "Edit welcome message content when new member join your group chat"
		},
		category: "custom",
		guide: {
			vi: {
				body: "   {pn} text [<n·ªôi dung> | reset]: ch·ªânh s·ª≠a n·ªôi dung vƒÉn b·∫£n ho·∫∑c reset v·ªÅ m·∫∑c ƒë·ªãnh, v·ªõi nh·ªØng shortcut c√≥ s·∫µn:"
					+ "\n  + {userName}: t√™n c·ªßa th√†nh vi√™n m·ªõi"
					+ "\n  + {userNameTag}: t√™n c·ªßa th√†nh vi√™n m·ªõi (tag)"
					+ "\n  + {boxName}:  t√™n c·ªßa nh√≥m chat"
					+ "\n  + {multiple}: b·∫°n || c√°c b·∫°n"
					+ "\n  + {session}:  bu·ªïi trong ng√†y"
					+ "\n\n   V√≠ d·ª•:"
					+ "\n    {pn} text Hello {userName}, welcome to {boxName}, ch√∫c {multiple} m·ªôt ng√†y m·ªõi vui v·∫ª"
					+ "\n"
					+ "\n   Reply (ph·∫£n h·ªìi) ho·∫∑c g·ª≠i k√®m m·ªôt tin nh·∫Øn c√≥ file v·ªõi n·ªôi dung {pn} file: ƒë·ªÉ th√™m t·ªáp ƒë√≠nh k√®m v√†o tin nh·∫Øn ch√†o m·ª´ng (·∫£nh, video, audio)"
					+ "\n\n   V√≠ d·ª•:"
					+ "\n    {pn} file reset: x√≥a g·ª≠i file",
				attachment: {
					[`${__dirname}/assets/guide/setwelcome/setwelcome_vi_1.png`]: "https://i.ibb.co/vd6bQrW/setwelcome-vi-1.png"
				}
			},
			en: {
				body: "   {pn} text [<content> | reset]: edit text content or reset to default, with some shortcuts:"
					+ "\n  + {userName}: new member name"
					+ "\n  + {userNameTag}: new member name (tag)"
					+ "\n  + {boxName}:  group chat name"
					+ "\n  + {multiple}: you || you guys"
					+ "\n  + {session}:  session in day"
					+ "\n\n   Example:"
					+ "\n    {pn} text Hello {userName}, welcome to {boxName}, have a nice day {multiple}"
					+ "\n"
					+ "\n   Reply (ph·∫£n h·ªìi) or send a message with file with content {pn} file: to add file attachments to welcome message (image, video, audio)"
					+ "\n\n   Example:"
					+ "\n    {pn} file reset: delete file attachments",
				attachment: {
					[`${__dirname}/assets/guide/setwelcome/setwelcome_en_1.png`]: "https://i.ibb.co/vsCz0ks/setwelcome-en-1.png"
				}
			}
		}
	},

	langs: {
		vi: {
			turnedOn: "ƒê√£ b·∫≠t ch·ª©c nƒÉng ch√†o m·ª´ng th√†nh vi√™n m·ªõi",
			turnedOff: "ƒê√£ t·∫Øt ch·ª©c nƒÉng ch√†o m·ª´ng th√†nh vi√™n m·ªõi",
			missingContent: "Vui l√πng nh·∫≠p n·ªôi dung tin nh·∫Øn",
			edited: "ƒê√£ ch·ªânh s·ª≠a n·ªôi dung tin nh·∫Øn ch√†o m·ª´ng c·ªßa nh√≥m b·∫°n th√†nh: %1",
			reseted: "ƒê√£ reset n·ªôi dung tin nh·∫Øn ch√†o m·ª´ng",
			noFile: "Kh√¥ng c√≥ t·ªáp ƒë√≠nh k√®m tin nh·∫Øn ch√†o m·ª´ng n√†o ƒë·ªÉ x√≥a",
			resetedFile: "ƒê√£ reset t·ªáp ƒë√≠nh k√®m th√†nh c√¥ng",
			missingFile: "H√£y ph·∫£n h·ªìi tin nh·∫Øn n√†y k√®m file ·∫£nh/video/audio",
			addedFile: "ƒê√£ th√™m %1 t·ªáp ƒë√≠nh k√®m v√†o tin nh·∫Øn ch√†o m·ª´ng c·ªßa nh√≥m b·∫°n"
		},
		en: {
			turnedOn: "ùôàùôöùô®ùô®ùôñùôúùôö ùôôùôö ùôóùôûùôöùô£ùô´ùôöùô£ùô™ùôö √† √©ùô©ùôñùôûùô© ùôñùôòùô©ùôûùô´√© ùô•ùôñùôß ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª",
			turnedOff: "ùôàùôöùô®ùô®ùôñùôúùôö ùôôùôö ùôóùôûùôöùô£ùô´ùôöùô£ùô™ùôö √† √©ùô©ùôñùôûùô© ùôô√©ùô®ùôñùôòùô©ùôûùô´√© ùô•ùôñùôß ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª",
			missingContent: "ùôëùôöùô™ùôûùô°ùô°ùôöùôØ ùô®ùôñùôûùô®ùôûùôß ùô°ùôö ùôòùô§ùô£ùô©ùôöùô£ùô™ ùôôùô™ ùô¢ùôöùô®ùô®ùôñùôúùôö ùôôùôö ùôóùôûùôöùô£ùô´ùôöùô£ùô™ùôö ùôôùôö ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª",
			edited: "ùòæùô§ùô£ùô©ùôöùô£ùô™ ùôôùô™ ùô¢ùôöùô®ùô®ùôñùôúùôö ùôôùôö ùôóùôûùôöùô£ùô´ùôöùô£ùô™ùôö ùô¢ùô§ùôôùôûùôõùôû√© ùôôùôö ùô´ùô§ùô©ùôßùôö ùôúùôßùô§ùô™ùô•ùôö ùô•ùô§ùô™ùôß üëª: %1",
			reseted: "ùòæùô§ùô£ùô©ùôöùô£ùô™ ùôôùô™ ùô¢ùôöùô®ùô®ùôñùôúùôö ùôôùôö ùôóùôûùôöùô£ùô´ùôöùô£ùô™ùôö ùôß√©ùôûùô£ùôûùô©ùôûùôñùô°ùôûùô®√© ùô•ùôñùôß ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö",
			noFile: "ùòºùô™ùôòùô™ùô£ùôö ùô•ùôû√®ùôòùôö ùôüùô§ùôûùô£ùô©ùôö √† ùô®ùô™ùô•ùô•ùôßùôûùô¢ùôöùôß ùô•ùôñùôß ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª",
			resetedFile: "ùôáùôöùô® ùô•ùôû√®ùôòùôöùô® ùôüùô§ùôûùô£ùô©ùôöùô® ùô§ùô£ùô© √©ùô©√© ùôß√©ùôûùô£ùôûùô©ùôûùôñùô°ùôûùô®√©ùôöùô® ùôñùô´ùôöùôò ùô®ùô™ùôòùôò√®ùô® ùôòùôùùôöùôØ ùòæùôùùôßùôûùô®ùô©ùôöùô°ùô°ùôö üëª",
			missingFile: "ùôëùôöùô™ùôûùô°ùô°ùôöùôØ ùôß√©ùô•ùô§ùô£ùôôùôßùôö √† ùôòùôö ùô¢ùôöùô®ùô®ùôñùôúùôö ùôñùô´ùôöùôò ùô™ùô£ ùôõùôûùôòùôùùôûùôöùôß ùôûùô¢ùôñùôúùôö/ùô´ùôûùôô√©ùô§/ùôñùô™ùôôùôûùô§ ùôöùô£ ùô¢ùô§ùôôùôö ùôõùôñùô£ùô©√¥ùô¢ùôö üëª",
			addedFile: "ùòºùôüùô§ùô™ùô© ùôôùôö %1 ùô•ùôû√®ùôòùôöùô® ùôüùô§ùôûùô£ùô©ùôöùô® √† ùô´ùô§ùô©ùôßùôö ùô¢ùôöùô®ùô®ùôñùôúùôö ùôôùôö ùôóùôûùôöùô£ùô´ùôöùô£ùô™ùôö ùôôùôö ùôúùôßùô§ùô™ùô•ùôö ùôöùô£ ùô¢ùô§ùôôùôö ùôõùôñùô£ùô©√¥ùô¢ùôö üëª"
		}
	},

	onStart: async function ({ args, threadsData, message, event, commandName, getLang }) {
		const { threadID, senderID, body } = event;
		const { data, settings } = await threadsData.get(threadID);

		switch (args[0]) {
			case "text": {
				if (!args[1])
					return message.reply(getLang("missingContent"));
				else if (args[1] == "reset")
					delete data.welcomeMessage;
				else
					data.welcomeMessage = body.slice(body.indexOf(args[0]) + args[0].length).trim();
				await threadsData.set(threadID, {
					data
				});
				message.reply(data.welcomeMessage ? getLang("edited", data.welcomeMessage) : getLang("reseted"));
				break;
			}
			case "file": {
				if (args[1] == "reset") {
					const { welcomeAttachment } = data;
					if (!welcomeAttachment)
						return message.reply(getLang("noFile"));
					try {
						await Promise.all(data.welcomeAttachment.map(fileId => drive.deleteFile(fileId)));
						delete data.welcomeAttachment;
					}
					catch (e) { }
					await threadsData.set(threadID, {
						data
					});
					message.reply(getLang("resetedFile"));
				}
				else if (event.attachments.length == 0 && (!event.messageReply || event.messageReply.attachments.length == 0))
					return message.reply(getLang("missingFile"), (err, info) => {
						global.GoatBot.onReply.set(info.messageID, {
							messageID: info.messageID,
							author: senderID,
							commandName
						});
					});
				else {
					saveChanges(message, event, threadID, senderID, threadsData, getLang);
				}
				break;
			}
			case "on":
			case "off": {
				settings.sendWelcomeMessage = args[0] == "on";
				await threadsData.set(threadID, { settings });
				message.reply(settings.sendWelcomeMessage ? getLang("turnedOn") : getLang("turnedOff"));
				break;
			}
			default:
				message.SyntaxError();
				break;
		}
	},

	onReply: async function ({ event, Reply, message, threadsData, getLang }) {
		const { threadID, senderID } = event;
		if (senderID != Reply.author)
			return;

		if (event.attachments.length == 0 && (!event.messageReply || event.messageReply.attachments.length == 0))
			return message.reply(getLang("missingFile"));
		saveChanges(message, event, threadID, senderID, threadsData, getLang);
	}
};

async function saveChanges(message, event, threadID, senderID, threadsData, getLang) {
	const { data } = await threadsData.get(threadID);
	const attachments = [...event.attachments, ...(event.messageReply?.attachments || [])].filter(item => ["photo", 'png', "animated_image", "video", "audio"].includes(item.type));
	if (!data.welcomeAttachment)
		data.welcomeAttachment = [];

	await Promise.all(attachments.map(async attachment => {
		const { url } = attachment;
		const ext = getExtFromUrl(url);
		const fileName = `${getTime()}.${ext}`;
		const infoFile = await drive.uploadFile(`setwelcome_${threadID}_${senderID}_${fileName}`, await getStreamFromURL(url));
		data.welcomeAttachment.push(infoFile.id);
	}));

	await threadsData.set(threadID, {
		data
	});
	message.reply(getLang("addedFile", attachments.length));
}
